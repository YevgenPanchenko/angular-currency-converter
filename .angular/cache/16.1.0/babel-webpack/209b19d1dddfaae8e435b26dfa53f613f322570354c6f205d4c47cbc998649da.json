{"ast":null,"code":"import _asyncToGenerator from \"D:/Web Development/projects/ANGULAR/converter/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\nimport * as i0 from \"@angular/core\";\nexport class CurrencyConverterComponent {\n  constructor() {\n    this.amount = 0;\n    this.fromCurrency = '';\n    this.toCurrency = '';\n    this.convertedAmount = 0;\n    this.rates = {};\n  }\n  ngOnInit() {\n    this.getCurrencies();\n  }\n  getCurrencies() {\n    var _this = this;\n    return _asyncToGenerator(function* () {\n      const response = yield fetch('https://bank.gov.ua/NBUStatService/v1/statdirectory/exchange?json');\n      const data = yield response.json();\n      data.forEach(currency => {\n        _this.rates[currency.cc] = currency.rate;\n      });\n      _this.rates[\"UAH\"] = 1.0;\n    })();\n  }\n  convertValue() {\n    const inputValue = parseFloat(String(this.amount));\n    let convertedValue;\n    if (this.fromCurrency === this.toCurrency) {\n      convertedValue = inputValue;\n    } else if (this.fromCurrency === 'UAH') {\n      convertedValue = inputValue / this.rates[this.toCurrency];\n    } else if (this.toCurrency === 'UAH') {\n      convertedValue = inputValue * this.rates[this.fromCurrency];\n    } else {\n      convertedValue = inputValue * this.rates[this.fromCurrency] / this.rates[this.toCurrency];\n    }\n    this.convertedAmount = parseFloat(convertedValue.toFixed(2));\n  }\n  convertBack() {\n    const inputValue = parseFloat(String(this.convertedAmount));\n    let convertedValue;\n    if (this.fromCurrency === this.toCurrency) {\n      convertedValue = inputValue;\n    } else if (this.fromCurrency === 'UAH') {\n      convertedValue = inputValue / this.rates[this.toCurrency];\n    } else if (this.toCurrency === 'UAH') {\n      convertedValue = inputValue * this.rates[this.fromCurrency];\n    } else {\n      convertedValue = inputValue * this.rates[this.toCurrency] / this.rates[this.fromCurrency];\n    }\n    this.amount = parseFloat(convertedValue.toFixed(2));\n  }\n}\nCurrencyConverterComponent.ɵfac = function CurrencyConverterComponent_Factory(t) {\n  return new (t || CurrencyConverterComponent)();\n};\nCurrencyConverterComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: CurrencyConverterComponent,\n  selectors: [[\"app-currency-converter\"]],\n  decls: 0,\n  vars: 0,\n  template: function CurrencyConverterComponent_Template(rf, ctx) {},\n  styles: [\".borderDiv[_ngcontent-%COMP%]{\\n    border: solid 2px rgba(160, 160, 160, 0.63);\\n    box-shadow: 0px 11px 8px 8px #ecececb4;\\n}\\nh1[_ngcontent-%COMP%] {\\n  text-align: center;\\n}\\n.currency-converter[_ngcontent-%COMP%] {\\n  display: flex;\\n  flex-direction: column;\\n  align-items: center;\\n  text-align: center;\\n  width: 100%;\\n  max-width: 800px;\\n}\\n.courses[_ngcontent-%COMP%]{\\n    color: rgba(0, 110, 255, 0.87);\\n}\\n.course-item[_ngcontent-%COMP%]{\\n    background-color: rgba(218, 246, 248, 0.719);\\n    border-color: white;\\n}\\n\\n.currency-converter[_ngcontent-%COMP%] {\\n  padding-top: 20px;\\n  padding-bottom: 20px;\\n}\\n\\n.exchange-rates[_ngcontent-%COMP%] {\\n  display: flex;\\n  justify-content: center;\\n  margin-bottom: 20px;\\n}\\n\\n.exchange-rate[_ngcontent-%COMP%] {\\n  margin: 0 10px;\\n}\\n\\n.currency[_ngcontent-%COMP%] {\\n  font-size: 18px;\\n  font-weight: bold;\\n}\\n\\n.rate[_ngcontent-%COMP%] {\\n  font-size: 24px;\\n}\\n\\n.conversion-form[_ngcontent-%COMP%] {\\n  display: flex;\\n  flex-direction: column;\\n  align-items: center;\\n}\\n\\n.input-group[_ngcontent-%COMP%] {\\n  margin-bottom: 10px;\\n}\\n\\n.input-group[_ngcontent-%COMP%]   label[_ngcontent-%COMP%] {\\n  margin-bottom: 5px;\\n}\\n\\n.output[_ngcontent-%COMP%] {\\n  font-size: 18px;\\n  font-weight: bold;\\n}\\n\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8uL3NyYy9hcHAvY3VycmVuY3ktY29udmVydGVyL2N1cnJlbmN5LWNvbnZlcnRlci5jb21wb25lbnQuY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0lBQ0ksMkNBQTJDO0lBQzNDLHNDQUFzQztBQUMxQztBQUNBO0VBQ0Usa0JBQWtCO0FBQ3BCO0FBQ0E7RUFDRSxhQUFhO0VBQ2Isc0JBQXNCO0VBQ3RCLG1CQUFtQjtFQUNuQixrQkFBa0I7RUFDbEIsV0FBVztFQUNYLGdCQUFnQjtBQUNsQjtBQUNBO0lBQ0ksOEJBQThCO0FBQ2xDO0FBQ0E7SUFDSSw0Q0FBNEM7SUFDNUMsbUJBQW1CO0FBQ3ZCOztBQUVBO0VBQ0UsaUJBQWlCO0VBQ2pCLG9CQUFvQjtBQUN0Qjs7QUFFQTtFQUNFLGFBQWE7RUFDYix1QkFBdUI7RUFDdkIsbUJBQW1CO0FBQ3JCOztBQUVBO0VBQ0UsY0FBYztBQUNoQjs7QUFFQTtFQUNFLGVBQWU7RUFDZixpQkFBaUI7QUFDbkI7O0FBRUE7RUFDRSxlQUFlO0FBQ2pCOztBQUVBO0VBQ0UsYUFBYTtFQUNiLHNCQUFzQjtFQUN0QixtQkFBbUI7QUFDckI7O0FBRUE7RUFDRSxtQkFBbUI7QUFDckI7O0FBRUE7RUFDRSxrQkFBa0I7QUFDcEI7O0FBRUE7RUFDRSxlQUFlO0VBQ2YsaUJBQWlCO0FBQ25CIiwic291cmNlc0NvbnRlbnQiOlsiLmJvcmRlckRpdntcclxuICAgIGJvcmRlcjogc29saWQgMnB4IHJnYmEoMTYwLCAxNjAsIDE2MCwgMC42Myk7XHJcbiAgICBib3gtc2hhZG93OiAwcHggMTFweCA4cHggOHB4ICNlY2VjZWNiNDtcclxufVxyXG5oMSB7XHJcbiAgdGV4dC1hbGlnbjogY2VudGVyO1xyXG59XHJcbi5jdXJyZW5jeS1jb252ZXJ0ZXIge1xyXG4gIGRpc3BsYXk6IGZsZXg7XHJcbiAgZmxleC1kaXJlY3Rpb246IGNvbHVtbjtcclxuICBhbGlnbi1pdGVtczogY2VudGVyO1xyXG4gIHRleHQtYWxpZ246IGNlbnRlcjtcclxuICB3aWR0aDogMTAwJTtcclxuICBtYXgtd2lkdGg6IDgwMHB4O1xyXG59XHJcbi5jb3Vyc2Vze1xyXG4gICAgY29sb3I6IHJnYmEoMCwgMTEwLCAyNTUsIDAuODcpO1xyXG59XHJcbi5jb3Vyc2UtaXRlbXtcclxuICAgIGJhY2tncm91bmQtY29sb3I6IHJnYmEoMjE4LCAyNDYsIDI0OCwgMC43MTkpO1xyXG4gICAgYm9yZGVyLWNvbG9yOiB3aGl0ZTtcclxufVxyXG5cclxuLmN1cnJlbmN5LWNvbnZlcnRlciB7XHJcbiAgcGFkZGluZy10b3A6IDIwcHg7XHJcbiAgcGFkZGluZy1ib3R0b206IDIwcHg7XHJcbn1cclxuXHJcbi5leGNoYW5nZS1yYXRlcyB7XHJcbiAgZGlzcGxheTogZmxleDtcclxuICBqdXN0aWZ5LWNvbnRlbnQ6IGNlbnRlcjtcclxuICBtYXJnaW4tYm90dG9tOiAyMHB4O1xyXG59XHJcblxyXG4uZXhjaGFuZ2UtcmF0ZSB7XHJcbiAgbWFyZ2luOiAwIDEwcHg7XHJcbn1cclxuXHJcbi5jdXJyZW5jeSB7XHJcbiAgZm9udC1zaXplOiAxOHB4O1xyXG4gIGZvbnQtd2VpZ2h0OiBib2xkO1xyXG59XHJcblxyXG4ucmF0ZSB7XHJcbiAgZm9udC1zaXplOiAyNHB4O1xyXG59XHJcblxyXG4uY29udmVyc2lvbi1mb3JtIHtcclxuICBkaXNwbGF5OiBmbGV4O1xyXG4gIGZsZXgtZGlyZWN0aW9uOiBjb2x1bW47XHJcbiAgYWxpZ24taXRlbXM6IGNlbnRlcjtcclxufVxyXG5cclxuLmlucHV0LWdyb3VwIHtcclxuICBtYXJnaW4tYm90dG9tOiAxMHB4O1xyXG59XHJcblxyXG4uaW5wdXQtZ3JvdXAgbGFiZWwge1xyXG4gIG1hcmdpbi1ib3R0b206IDVweDtcclxufVxyXG5cclxuLm91dHB1dCB7XHJcbiAgZm9udC1zaXplOiAxOHB4O1xyXG4gIGZvbnQtd2VpZ2h0OiBib2xkO1xyXG59XHJcbiJdLCJzb3VyY2VSb290IjoiIn0= */\"]\n});","map":{"version":3,"names":["CurrencyConverterComponent","constructor","amount","fromCurrency","toCurrency","convertedAmount","rates","ngOnInit","getCurrencies","_this","_asyncToGenerator","response","fetch","data","json","forEach","currency","cc","rate","convertValue","inputValue","parseFloat","String","convertedValue","toFixed","convertBack","selectors","decls","vars","template","CurrencyConverterComponent_Template","rf","ctx","styles"],"sources":["D:\\Web Development\\projects\\ANGULAR\\converter\\src\\app\\currency-converter\\currency-converter.component.ts"],"sourcesContent":["// import { Component, OnInit } from '@angular/core';\r\n\r\n// @Component({\r\n//   selector: 'app-currency-converter',\r\n//   templateUrl: './currency-converter.component.html',\r\n//   styleUrls: ['./currency-converter.component.css'],\r\n// })\r\n// export class CurrencyConverterComponent implements OnInit {\r\n//   amount: number = 0;\r\n//   fromCurrency: string = '';\r\n//   toCurrency: string = '';\r\n//   convertedAmount: number = 0;\r\n//   rates: any = {};\r\n\r\n//   ngOnInit(): void {\r\n//     this.getCurrencies();\r\n//   }\r\n\r\n//   async getCurrencies(): Promise<void> {\r\n//     const response = await fetch(\r\n//       'https://bank.gov.ua/NBUStatService/v1/statdirectory/exchange?json'\r\n//     );\r\n//     const data = await response.json();\r\n\r\n//     data.forEach((currency: any) => {\r\n//       this.rates[currency.cc] = currency.rate;\r\n//     });\r\n\r\n//     this.rates.UAH = 1.0;\r\n//   }\r\n\r\n//   convertValue(): void {\r\n//     const inputValue = parseFloat(this.amount.toString());\r\n\r\n//     let convertedValue;\r\n\r\n//     if (this.fromCurrency === this.toCurrency) {\r\n//       convertedValue = inputValue;\r\n//     } else if (this.fromCurrency === 'UAH') {\r\n//       convertedValue = inputValue / this.rates[this.toCurrency];\r\n//     } else if (this.toCurrency === 'UAH') {\r\n//       convertedValue = inputValue * this.rates[this.fromCurrency];\r\n//     } else {\r\n//       convertedValue =\r\n//         (inputValue * this.rates[this.fromCurrency]) /\r\n//         this.rates[this.toCurrency];\r\n//     }\r\n\r\n//     this.convertedAmount = parseFloat(convertedValue.toFixed(2));\r\n//   }\r\n\r\n//   convertBack(): void {\r\n//     const inputValue = parseFloat(this.convertedAmount.toString());\r\n\r\n//     let convertedValue;\r\n\r\n//     if (this.fromCurrency === this.toCurrency) {\r\n//       convertedValue = inputValue;\r\n//     } else if (this.fromCurrency === 'UAH') {\r\n//       convertedValue = inputValue / this.rates[this.toCurrency];\r\n//     } else if (this.toCurrency === 'UAH') {\r\n//       convertedValue = inputValue * this.rates[this.fromCurrency];\r\n//     } else {\r\n//       convertedValue =\r\n//         (inputValue * this.rates[this.toCurrency]) /\r\n//         this.rates[this.fromCurrency];\r\n//     }\r\n\r\n//     this.amount = parseFloat(convertedValue.toFixed(2));\r\n//   }\r\n  \r\n// }\r\n\r\n\r\nimport { Component, OnInit } from '@angular/core';\r\n\r\ninterface Currency {\r\n  cc: string;\r\n  rate: number;\r\n}\r\n\r\n@Component({\r\n  selector: 'app-currency-converter',\r\n  templateUrl: './currency-converter.component.html',\r\n  styleUrls: ['./currency-converter.component.css'],\r\n})\r\nexport class CurrencyConverterComponent implements OnInit {\r\n  amount = 0;\r\n  fromCurrency = '';\r\n  toCurrency = '';\r\n  convertedAmount = 0;\r\n  rates: { [key: string]: number } = {};\r\n\r\n  ngOnInit(): void {\r\n    this.getCurrencies();\r\n  }\r\n\r\n  async getCurrencies(): Promise<void> {\r\n    const response = await fetch(\r\n      'https://bank.gov.ua/NBUStatService/v1/statdirectory/exchange?json'\r\n    );\r\n    const data: Currency[] = await response.json();\r\n\r\n    data.forEach((currency) => {\r\n      this.rates[currency.cc] = currency.rate;\r\n    });\r\n\r\n    this.rates[\"UAH\"] = 1.0;\r\n  }\r\n\r\n  convertValue(): void {\r\n    const inputValue = parseFloat(String(this.amount));\r\n    let convertedValue: number;\r\n\r\n    if (this.fromCurrency === this.toCurrency) {\r\n      convertedValue = inputValue;\r\n    } else if (this.fromCurrency === 'UAH') {\r\n      convertedValue = inputValue / this.rates[this.toCurrency];\r\n    } else if (this.toCurrency === 'UAH') {\r\n      convertedValue = inputValue * this.rates[this.fromCurrency];\r\n    } else {\r\n      convertedValue =\r\n        (inputValue * this.rates[this.fromCurrency]) /\r\n        this.rates[this.toCurrency];\r\n    }\r\n\r\n    this.convertedAmount = parseFloat(convertedValue.toFixed(2));\r\n  }\r\n\r\n  convertBack(): void {\r\n    const inputValue = parseFloat(String(this.convertedAmount));\r\n    let convertedValue: number;\r\n\r\n    if (this.fromCurrency === this.toCurrency) {\r\n      convertedValue = inputValue;\r\n    } else if (this.fromCurrency === 'UAH') {\r\n      convertedValue = inputValue / this.rates[this.toCurrency];\r\n    } else if (this.toCurrency === 'UAH') {\r\n      convertedValue = inputValue * this.rates[this.fromCurrency];\r\n    } else {\r\n      convertedValue =\r\n        (inputValue * this.rates[this.toCurrency]) /\r\n        this.rates[this.fromCurrency];\r\n    }\r\n\r\n    this.amount = parseFloat(convertedValue.toFixed(2));\r\n  }\r\n}\r\n"],"mappings":";;AAsFA,OAAM,MAAOA,0BAA0B;EALvCC,YAAA;IAME,KAAAC,MAAM,GAAG,CAAC;IACV,KAAAC,YAAY,GAAG,EAAE;IACjB,KAAAC,UAAU,GAAG,EAAE;IACf,KAAAC,eAAe,GAAG,CAAC;IACnB,KAAAC,KAAK,GAA8B,EAAE;;EAErCC,QAAQA,CAAA;IACN,IAAI,CAACC,aAAa,EAAE;EACtB;EAEMA,aAAaA,CAAA;IAAA,IAAAC,KAAA;IAAA,OAAAC,iBAAA;MACjB,MAAMC,QAAQ,SAASC,KAAK,CAC1B,mEAAmE,CACpE;MACD,MAAMC,IAAI,SAAqBF,QAAQ,CAACG,IAAI,EAAE;MAE9CD,IAAI,CAACE,OAAO,CAAEC,QAAQ,IAAI;QACxBP,KAAI,CAACH,KAAK,CAACU,QAAQ,CAACC,EAAE,CAAC,GAAGD,QAAQ,CAACE,IAAI;MACzC,CAAC,CAAC;MAEFT,KAAI,CAACH,KAAK,CAAC,KAAK,CAAC,GAAG,GAAG;IAAC;EAC1B;EAEAa,YAAYA,CAAA;IACV,MAAMC,UAAU,GAAGC,UAAU,CAACC,MAAM,CAAC,IAAI,CAACpB,MAAM,CAAC,CAAC;IAClD,IAAIqB,cAAsB;IAE1B,IAAI,IAAI,CAACpB,YAAY,KAAK,IAAI,CAACC,UAAU,EAAE;MACzCmB,cAAc,GAAGH,UAAU;KAC5B,MAAM,IAAI,IAAI,CAACjB,YAAY,KAAK,KAAK,EAAE;MACtCoB,cAAc,GAAGH,UAAU,GAAG,IAAI,CAACd,KAAK,CAAC,IAAI,CAACF,UAAU,CAAC;KAC1D,MAAM,IAAI,IAAI,CAACA,UAAU,KAAK,KAAK,EAAE;MACpCmB,cAAc,GAAGH,UAAU,GAAG,IAAI,CAACd,KAAK,CAAC,IAAI,CAACH,YAAY,CAAC;KAC5D,MAAM;MACLoB,cAAc,GACXH,UAAU,GAAG,IAAI,CAACd,KAAK,CAAC,IAAI,CAACH,YAAY,CAAC,GAC3C,IAAI,CAACG,KAAK,CAAC,IAAI,CAACF,UAAU,CAAC;;IAG/B,IAAI,CAACC,eAAe,GAAGgB,UAAU,CAACE,cAAc,CAACC,OAAO,CAAC,CAAC,CAAC,CAAC;EAC9D;EAEAC,WAAWA,CAAA;IACT,MAAML,UAAU,GAAGC,UAAU,CAACC,MAAM,CAAC,IAAI,CAACjB,eAAe,CAAC,CAAC;IAC3D,IAAIkB,cAAsB;IAE1B,IAAI,IAAI,CAACpB,YAAY,KAAK,IAAI,CAACC,UAAU,EAAE;MACzCmB,cAAc,GAAGH,UAAU;KAC5B,MAAM,IAAI,IAAI,CAACjB,YAAY,KAAK,KAAK,EAAE;MACtCoB,cAAc,GAAGH,UAAU,GAAG,IAAI,CAACd,KAAK,CAAC,IAAI,CAACF,UAAU,CAAC;KAC1D,MAAM,IAAI,IAAI,CAACA,UAAU,KAAK,KAAK,EAAE;MACpCmB,cAAc,GAAGH,UAAU,GAAG,IAAI,CAACd,KAAK,CAAC,IAAI,CAACH,YAAY,CAAC;KAC5D,MAAM;MACLoB,cAAc,GACXH,UAAU,GAAG,IAAI,CAACd,KAAK,CAAC,IAAI,CAACF,UAAU,CAAC,GACzC,IAAI,CAACE,KAAK,CAAC,IAAI,CAACH,YAAY,CAAC;;IAGjC,IAAI,CAACD,MAAM,GAAGmB,UAAU,CAACE,cAAc,CAACC,OAAO,CAAC,CAAC,CAAC,CAAC;EACrD;;AA5DWxB,0BAA0B,C;mBAA1BA,0BAA0B;AAAA;AAA1BA,0BAA0B,C;QAA1BA,0BAA0B;EAAA0B,SAAA;EAAAC,KAAA;EAAAC,IAAA;EAAAC,QAAA,WAAAC,oCAAAC,EAAA,EAAAC,GAAA;EAAAC,MAAA;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}